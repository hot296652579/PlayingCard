{"version":3,"sources":["file:///Users/super_javan/cocoscreator/PlayCard/assets/Script/UI/UIPoker.ts"],"names":["_decorator","Component","Node","Sprite","NodeEventType","ECardDir","ResMgr","getSpPath","ccclass","property","UIPoker","cardSpFrame","_poker","poker","start","node","getComponent","initEvent","on","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","init","bindView","spPath","suit","count","cardSpriteFrame","getInstance","loadResSpriteFrame","spriteFrame","updateCardDir","dir","CLOSE","cardBgNode","active","refreshView","event","console","log","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAmBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,a,OAAAA,a;;AAClDC,MAAAA,Q,iBAAAA,Q;;AAEFC,MAAAA,M;;AACEC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;yBAGjBU,O,WADZF,OAAO,CAAC,SAAD,C,UAEHC,QAAQ,CAACP,IAAD,C,2BAFb,MACaQ,OADb,SAC6BT,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA,eAInCU,WAJmC,GAIb,IAJa;AAAA,eAK3BC,MAL2B;AAAA;;AAMnB,YAALC,KAAK,GAAG;AACf,iBAAO,KAAKD,MAAZ;AACH;;AAEDE,QAAAA,KAAK,GAAG;AACJ,eAAKH,WAAL,GAAmB,KAAKI,IAAL,CAAUC,YAAV,CAAuBb,MAAvB,CAAnB;AAEA,eAAKc,SAAL;AACH;;AAEDA,QAAAA,SAAS,GAAG;AACR,eAAKF,IAAL,CAAUG,EAAV,CAAad,aAAa,CAACe,WAA3B,EAAwC,KAAKC,UAA7C,EAAyD,IAAzD,EADQ,CACyD;;AACjE,eAAKL,IAAL,CAAUG,EAAV,CAAad,aAAa,CAACiB,UAA3B,EAAuC,KAAKC,SAA5C,EAAuD,IAAvD;AACA,eAAKP,IAAL,CAAUG,EAAV,CAAad,aAAa,CAACmB,SAA3B,EAAsC,KAAKC,QAA3C,EAAqD,IAArD;AACH;;AAES,cAAJC,IAAI,CAACZ,KAAD,EAAe;AACrB,cAAI,CAACA,KAAL,EAAY;AACZ,eAAKD,MAAL,GAAcC,KAAd;AACAA,UAAAA,KAAK,CAACa,QAAN,CAAe,IAAf;AACA,gBAAMC,MAAM,GAAG;AAAA;AAAA,sCAAUd,KAAK,CAACe,IAAhB,EAAsBf,KAAK,CAACgB,KAA5B,CAAf;AACA,gBAAMC,eAAe,GAAG,MAAM;AAAA;AAAA,gCAAOC,WAAP,GAAqBC,kBAArB,CAAwCL,MAAxC,CAA9B;AACA,eAAKhB,WAAL,CAAiBsB,WAAjB,GAA+BH,eAA/B;AAEA,eAAKI,aAAL,CAAmBrB,KAAnB;AACH;;AAEDqB,QAAAA,aAAa,CAAC;AAAEC,UAAAA;AAAF,SAAD,EAAU;AACnB,cAAIA,GAAG,IAAI;AAAA;AAAA,oCAASC,KAApB,EAA2B;AACvB,iBAAKC,UAAL,CAAgBC,MAAhB,GAAyB,IAAzB;AACH,WAFD,MAEO;AACH,iBAAKD,UAAL,CAAgBC,MAAhB,GAAyB,KAAzB;AACH;AACJ;;AAEDC,QAAAA,WAAW,GAAG;AACV,eAAKL,aAAL,CAAmB,KAAKtB,MAAxB;AACH;;AAEDQ,QAAAA,UAAU,CAACoB,KAAD,EAAQ;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACG,MAAnC;AACH;;AAEDrB,QAAAA,SAAS,GAAG,CAEX;;AAEDE,QAAAA,QAAQ,GAAG,CAEV;;AAvDkC,O;;;;;iBAEhB,I","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, Sprite, NodeEventType } from 'cc';\nimport { ECardDir } from '../Enum';\nimport Poker from '../Model/Poker';\nimport ResMgr from '../ResMgr';\nimport { getSpPath } from '../Utils/Utils';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIPoker')\nexport class UIPoker extends Component {\n    @property(Node)\n    cardBgNode: Node = null\n\n    cardSpFrame: Sprite = null\n    private _poker: Poker\n    public get poker() {\n        return this._poker\n    }\n\n    start() {\n        this.cardSpFrame = this.node.getComponent(Sprite)\n\n        this.initEvent()\n    }\n\n    initEvent() {\n        this.node.on(NodeEventType.TOUCH_START, this.touchStart, this);  // if \"this\" is component and the \"memberFunction\" declared in CCClass.\n        this.node.on(NodeEventType.TOUCH_MOVE, this.touchMove, this);\n        this.node.on(NodeEventType.TOUCH_END, this.touchEnd, this);\n    }\n\n    async init(poker: Poker) {\n        if (!poker) return\n        this._poker = poker\n        poker.bindView(this)\n        const spPath = getSpPath(poker.suit, poker.count)\n        const cardSpriteFrame = await ResMgr.getInstance().loadResSpriteFrame(spPath)\n        this.cardSpFrame.spriteFrame = cardSpriteFrame\n\n        this.updateCardDir(poker)\n    }\n\n    updateCardDir({ dir }) {\n        if (dir == ECardDir.CLOSE) {\n            this.cardBgNode.active = true\n        } else {\n            this.cardBgNode.active = false\n        }\n    }\n\n    refreshView() {\n        this.updateCardDir(this._poker)\n    }\n\n    touchStart(event) {\n        console.log('event.target,', event.target)\n    }\n\n    touchMove() {\n\n    }\n\n    touchEnd() {\n\n    }\n}\n\n"]}