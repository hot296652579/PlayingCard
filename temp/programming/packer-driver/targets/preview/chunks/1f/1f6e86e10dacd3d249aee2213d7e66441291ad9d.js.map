{"version":3,"sources":["file:///Users/super_javan/cocoscreator/PlayCard/assets/Script/Model/Poker.ts"],"names":["Poker","ECardDir","EnumSuit","ESuitNum","UIPoker","_UIPoker","dir","_dir","newDir","constructor","count","suit","HeiTao","CLOSE","parent","bindView","unBindView","isConcatable","p","isSimilarSuit","Number"],"mappings":";;;4DAGqBA,K;;;;;;;;;;;;;;;;;;;;;;;;;;AAHZC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,Q,iBAAAA,Q;;;;;;;yBAGRH,K,GAAN,MAAMA,KAAN,CAAY;AAML,YAAPI,OAAO,GAAG;AACjB,iBAAO,KAAKC,QAAZ;AACH;;AAEa,YAAHC,GAAG,GAAG;AACb,iBAAO,KAAKC,IAAZ;AACH;;AACa,YAAHD,GAAG,CAACE,MAAD,EAAS;AACnB,eAAKD,IAAL,GAAYC,MAAZ;AACH;;AAEDC,QAAAA,WAAW,CAACC,KAAD,EAAgBC,IAAhB,EAAgCL,GAAhC,EAA+C;AAAA,eAhBnDI,KAgBmD,GAhBnC,CAAC,CAgBkC;AAAA,eAfnDC,IAemD,GAflC;AAAA;AAAA,oCAASC,MAeyB;AAAA,eAdnDL,IAcmD,GAdlC;AAAA;AAAA,oCAASM,KAcyB;AAAA,eAblDR,QAakD,GAb9B,IAa8B;AAAA,eAZnDS,MAYmD,GAZrC,IAYqC;AACtD,eAAKJ,KAAL,GAAaA,KAAb;AACA,eAAKC,IAAL,GAAYA,IAAZ;AACA,eAAKL,GAAL,GAAWA,GAAX;AACH;;AAEDS,QAAAA,QAAQ,CAACX,OAAD,EAAU;AACd,eAAKC,QAAL,GAAgBD,OAAhB;AACH;;AAEDY,QAAAA,UAAU,GAAG;AACT,eAAKX,QAAL,GAAgB,IAAhB;AACH,SA7BsB,CA8BvB;;;AACOY,QAAAA,YAAY,CAACC,CAAD,EAAW;AAC1B,iBAAO,KAAKR,KAAL,IAAcQ,CAAC,CAACR,KAAF,GAAU,CAAxB,IAA6B,CAAC,KAAKS,aAAL,CAAmBD,CAAC,CAACP,IAArB,CAArC;AACH;;AAEMQ,QAAAA,aAAa,CAACR,IAAD,EAAiB;AACjC,iBAAOS,MAAM,CAAC;AAAA;AAAA,oCAAST,IAAT,IAAiB;AAAA;AAAA,oCAAS,KAAKA,IAAd,CAAlB,CAAN,GAA+C,CAA/C,IAAoD,CAA3D;AACH;;AArCsB,O","sourcesContent":["import { ECardDir, EnumSuit, ESuitNum } from \"../Enum\"\nimport { UIPoker } from \"../UI/UIPoker\"\n\nexport default class Poker {\n    public count: number = -1\n    public suit: EnumSuit = EnumSuit.HeiTao\n    public _dir: ECardDir = ECardDir.CLOSE\n    private _UIPoker: UIPoker = null\n    public parent: any = null\n    public get UIPoker() {\n        return this._UIPoker\n    }\n\n    public get dir() {\n        return this._dir\n    }\n    public set dir(newDir) {\n        this._dir = newDir\n    }\n\n    constructor(count: number, suit: EnumSuit, dir: ECardDir) {\n        this.count = count\n        this.suit = suit\n        this.dir = dir\n    }\n\n    bindView(UIPoker) {\n        this._UIPoker = UIPoker\n    }\n\n    unBindView() {\n        this._UIPoker = null\n    }\n    //红黑交替连接判断\n    public isConcatable(p: Poker) {\n        return this.count == p.count + 1 && !this.isSimilarSuit(p.suit)\n    }\n\n    public isSimilarSuit(suit: EnumSuit) {\n        return Number(ESuitNum[suit] + ESuitNum[this.suit]) % 2 == 0\n    }\n}"]}