{"version":3,"sources":["file:///Users/super_javan/cocoscreator/PlayCard/assets/Script/View/UIGameView.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Vec3","tween","EventMgr","ECardDir","EventGame_Enum","GameDB","PLAY_AREA_COUNT","UIPoker","moveWorld2Space","ccclass","property","UIGameView","onLoad","getInstance","on","EVENT_PLAYAREA_TO_RECEIVE","clickCardHandler","EVENT_PLAYAREA_TO_RECEIVE_UPDATE_VIEW","playPokerToReceive","EVENT_OPEN_TOPPOKER_UPDATE_VIEW","openTopPoker","EVENT_CLOSEAREA_TO_OPEN_UPDATE_VIEW","closeToOpen","EVENT_OPEN_TO_RECEIVE_UPDATE_VIEW","openToReceive","createAllCardByDB","pokers","index","poker","uiPoker","createUIPoker","initArea","addChild","node","setPosition","cardPrefab","getComponent","init","gamePlay","stuck","children","length","removeChild","push","card","closeSendArea","initPlayGroup","groupIndex","cardIndex","i","playGruopRoot","setSiblingIndex","delay","nodeEndPos","to","position","scale","call","dir","OPEN","refreshView","start","onCheckInPlayArea","console","log","onCheckIndexTop","isOpen","emit","EVENT_PLAYAREA_TO_RECEIVE_UPDATE_DB","onCheckInCloseArea","onCheckIndexByCloseTop","EVENT_CLOSEAREA_TO_OPEN_UPDATE_DB","onCheckInOpenArea","onCheckIndexByOpenTop","EVENT_OPEN_TO_RECEIVE_UPDATE_DB","moveUIPokerToReceiveArea","receiveIndex","parent","targetNode","receiveAreaList","openSendArea","padding","p","openGroup","getPoker","restartGame","removeAllChildren","area","EVENT_RESTART_GAME"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Game, instantiate, Vec3, UITransform, Tween, tween } from 'cc';\nimport EventMgr from '../Base/Event/EventMgr';\nimport { ECardDir, EventGame_Enum } from '../Enum';\nimport GameEngine from '../GameEngine';\nimport GameDB, { PLAY_AREA_COUNT } from '../Model/GameDB';\nimport Poker from '../Model/Poker';\nimport { UIPoker } from '../UI/UIPoker';\nimport TweenUtil, { moveWorld2Space } from '../Utils/Utils';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIGameView')\nexport class UIGameView extends Component {\n    @property(Prefab)\n    cardPrefab: Prefab = null\n\n    @property(Node)\n    closeSendArea: Node = null\n    @property(Node)\n    openSendArea: Node = null\n    @property([Node])\n    receiveAreaList: Node[] = []\n    @property(Node)\n    playGruopRoot: Node = null\n    @property(Node)\n    initArea: Node = null\n\n    onLoad() {\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_PLAYAREA_TO_RECEIVE, this.clickCardHandler, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_PLAYAREA_TO_RECEIVE_UPDATE_VIEW, this.playPokerToReceive, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_OPEN_TOPPOKER_UPDATE_VIEW, this.openTopPoker, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_CLOSEAREA_TO_OPEN_UPDATE_VIEW, this.closeToOpen, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_OPEN_TO_RECEIVE_UPDATE_VIEW, this.openToReceive, this)\n    }\n\n    createAllCardByDB(pokers: Poker[]) {\n        //先创建所有牌到init待发牌区\n        let index = 0\n        for (const poker of pokers) {\n            let uiPoker = this.createUIPoker(poker)\n            this.initArea.addChild(uiPoker.node)\n            uiPoker.node.setPosition(0.5 * index, 0.2 * index, 0)\n            index++\n        }\n    }\n\n    createUIPoker(poker: Poker): UIPoker {\n        const cardPrefab = instantiate(this.cardPrefab)\n        const uiPoker = cardPrefab.getComponent(UIPoker)\n        uiPoker.init(poker)\n        return uiPoker\n    }\n\n    //将牌移到close 收牌区\n    gamePlay() {\n        let stuck = []\n        for (let index = this.initArea.children.length - 1; index >= 0; --index) {\n            let children = this.initArea.children[index]\n            this.initArea.removeChild(children)\n            stuck.push(children)\n        }\n\n        for (let index = stuck.length - 1; index >= 0; --index) {\n            const card = stuck[index];\n            this.closeSendArea.addChild(card)\n        }\n    }\n\n    async initPlayGroup(groupIndex: number, cardIndex: number, poker: Poker, i: number) {\n        let index = PLAY_AREA_COUNT * cardIndex - cardIndex * (cardIndex - 1) / 2 - cardIndex + groupIndex\n        // console.log('groupIndex:' + groupIndex + ',cardIndex:' + cardIndex + ',index:' + index)\n        let node = poker.UIPoker.node\n        // console.log('poker 点数:', poker.count, ',花色:', poker.suit)\n        // console.log('poker worldPos', node.getComponent(UITransform).convertToWorldSpaceAR(new Vec3(0, 0, 0)))\n        moveWorld2Space(node, this.playGruopRoot)\n        node.setSiblingIndex(index)\n\n        let delay = index * 0.1\n        let nodeEndPos = groupIndex * 92\n\n        if (i == 0) {\n            tween(node)\n                .delay(delay)\n                .to(0.3, { position: new Vec3(nodeEndPos, cardIndex * -30, 0) })\n                .to(0.3, { scale: new Vec3(0, 1, 0) })\n                .call(() => {\n                    poker.dir = ECardDir.OPEN\n                    poker.UIPoker.refreshView()\n                })\n                .to(0.3, { scale: new Vec3(1, 1, 1) })\n                .start()\n        } else {\n            tween(node)\n                .delay(delay)\n                .to(0.3, { position: new Vec3(nodeEndPos, cardIndex * -30, 0) })\n                .start()\n        }\n    }\n\n    clickCardHandler(poker: Poker) {\n        let uiPoker = poker.UIPoker\n\n        if (GameDB.getInstance().onCheckInPlayArea(poker)) {\n            console.log('点击的区域是PlayArea')\n            if (GameDB.getInstance().onCheckIndexTop(poker)) {\n                if (uiPoker.isOpen()) {\n                    EventMgr.getInstance().emit(EventGame_Enum.EVENT_PLAYAREA_TO_RECEIVE_UPDATE_DB, uiPoker.poker)\n                }\n            }\n        } else if (GameDB.getInstance().onCheckInCloseArea(poker)) {\n            console.log('点击的区域是CloseArea')\n            if (GameDB.getInstance().onCheckIndexByCloseTop(poker)) {\n                EventMgr.getInstance().emit(EventGame_Enum.EVENT_CLOSEAREA_TO_OPEN_UPDATE_DB, uiPoker.poker)\n            }\n        } else if (GameDB.getInstance().onCheckInOpenArea(poker)) {\n            console.log('点击的区域是openArea')\n            if (GameDB.getInstance().onCheckIndexByOpenTop(poker)) {\n                EventMgr.getInstance().emit(EventGame_Enum.EVENT_OPEN_TO_RECEIVE_UPDATE_DB, uiPoker.poker)\n            }\n        }\n    }\n\n    playPokerToReceive(poker: Poker) {\n        this.moveUIPokerToReceiveArea(poker)\n    }\n\n    openToReceive(poker: Poker) {\n        this.moveUIPokerToReceiveArea(poker)\n    }\n\n    moveUIPokerToReceiveArea(poker: Poker) {\n        let receiveIndex: number = poker.parent.index\n        console.log('receiveIndex:', receiveIndex)\n        let node = poker.UIPoker.node\n        // console.log('poker worldPos', node.getComponent(UITransform).convertToWorldSpaceAR(new Vec3(0, 0, 0)))\n        let targetNode = this.receiveAreaList[receiveIndex]\n        moveWorld2Space(node, targetNode)\n\n        let delay = 0.5\n        tween(node)\n            .to(delay, { position: new Vec3(0, 0, 0) })\n            .start()\n    }\n\n    openTopPoker(poker: Poker) {\n        let node = poker.UIPoker.node\n        tween(node)\n            .to(0.3, { scale: new Vec3(0, 0, 0) })\n            .call(() => {\n                poker.dir = ECardDir.OPEN\n                poker.UIPoker.refreshView()\n            })\n            .to(0.3, { scale: new Vec3(1, 1, 1) })\n            .start()\n    }\n\n    closeToOpen(poker: Poker) {\n        let node = poker.UIPoker.node\n        moveWorld2Space(node, this.openSendArea)\n\n        let delay = 0.5\n        tween(node)\n            .to(delay, { position: new Vec3(0, 0, 0) })\n            .to(0.3, { scale: new Vec3(0, 1, 1) })\n            .call(() => {\n                poker.dir = ECardDir.OPEN\n                poker.UIPoker.refreshView()\n            })\n            .to(0.3, { scale: new Vec3(1, 1, 1) })\n            .start()\n\n        let padding = -30\n        for (let index = 0; index <= 1; index++) {\n            let p: Poker = GameDB.getInstance().openGroup.getPoker(-2 - index)\n            if (p) {\n                tween(p.UIPoker.node)\n                    .to(0.2, { position: new Vec3(padding * (index + 1), 0, 0) })\n                    .start()\n            }\n        }\n    }\n\n    restartGame() {\n        this.closeSendArea.removeAllChildren()\n        this.openSendArea.removeAllChildren()\n\n        for (let index = 0; index < this.receiveAreaList.length; index++) {\n            const area = this.receiveAreaList[index];\n            area.removeAllChildren()\n        }\n\n        this.playGruopRoot.removeAllChildren()\n        this.initArea.removeAllChildren()\n\n        EventMgr.getInstance().emit(EventGame_Enum.EVENT_RESTART_GAME)\n    }\n}\n\n"]}