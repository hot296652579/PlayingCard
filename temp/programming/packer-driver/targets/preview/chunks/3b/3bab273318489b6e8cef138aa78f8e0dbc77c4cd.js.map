{"version":3,"sources":["file:///Users/super_javan/cocoscreator/PlayCard/assets/Script/Base/Event/EventMgr.ts"],"names":["EventMgr","eventMap","Map","getInstance","instance","on","event","cb","ctx","has","set","off","evt","item","get","delete","once","unsub","undefined","param","apply","emit","console","error","clear"],"mappings":";;;iBAMqBA,Q;;;;;;;;;;;;;yBAAAA,Q,GAAN,MAAMA,QAAN,CAAe;AAAA;AAAA,eASlBC,QATkB,GASa,IAAIC,GAAJ,EATb;AAAA;;AAED,eAAXC,WAAW,GAAQ;AAC7B,cAAI,KAAKC,QAAL,IAAiB,IAArB,EAA2B;AACvB,iBAAKA,QAAL,GAAgB,IAAIJ,QAAJ,EAAhB;AACH;;AACD,iBAAO,KAAKI,QAAZ;AACH;;AAIDC,QAAAA,EAAE,CAACC,KAAD,EAAQC,EAAR,EAAYC,GAAZ,EAAkB;AAChB,cAAI,CAAC,KAAKP,QAAL,CAAcQ,GAAd,CAAkBH,KAAlB,CAAL,EAA+B;AAC3B,iBAAKL,QAAL,CAAcS,GAAd,CAAkBJ,KAAlB,EAAyB;AACrBA,cAAAA,KADqB;AACdC,cAAAA,EADc;AACVC,cAAAA;AADU,aAAzB;AAGH;;AAED,iBAAO,MAAM,CAEZ,CAFD;AAGH;;AAEDG,QAAAA,GAAG,CAACC,GAAD,EAAc;AACb,cAAI,KAAKX,QAAL,CAAcQ,GAAd,CAAkBG,GAAlB,CAAJ,EAA4B;AACxB,gBAAMC,IAAI,GAAG,KAAKZ,QAAL,CAAca,GAAd,CAAkBF,GAAlB,CAAb;;AACA,gBAAIC,IAAJ,EAAU;AACN,mBAAKZ,QAAL,CAAcc,MAAd,CAAqBH,GAArB;AACH;AACJ;AACJ;;AAEDI,QAAAA,IAAI,CAACV,KAAD,EAAQC,EAAR,EAAYC,GAAZ,EAAkB;AAClB,cAAIS,KAAK,GAAGC,SAAZ;AACAD,UAAAA,KAAK,GAAG,KAAKZ,EAAL,CAAQC,KAAR,EAAe,YAAc;AAAA,8CAAVa,KAAU;AAAVA,cAAAA,KAAU;AAAA;;AACjCZ,YAAAA,EAAE,CAACa,KAAH,CAASZ,GAAT,EAAcW,KAAd;AACAF,YAAAA,KAAK;AACR,WAHO,EAGLT,GAHK,CAAR;AAIA,iBAAOS,KAAP;AACH;;AAEDI,QAAAA,IAAI,CAACT,GAAD,EAAwB;AACxB,cAAI,KAAKX,QAAL,CAAcQ,GAAd,CAAkBG,GAAlB,CAAJ,EAA4B;AACxB,gBAAMC,IAAI,GAAG,KAAKZ,QAAL,CAAca,GAAd,CAAkBF,GAAlB,CAAb;AACA,gBAAM;AAAEN,cAAAA,KAAF;AAASC,cAAAA,EAAT;AAAaC,cAAAA;AAAb,gBAAqBK,IAA3B;;AACA,gBAAID,GAAG,IAAIL,EAAX,EAAe;AAAA,iDAJFY,KAIE;AAJFA,gBAAAA,KAIE;AAAA;;AACXZ,cAAAA,EAAE,CAACa,KAAH,CAASZ,GAAT,EAAcW,KAAd;AACH;AACJ,WAND,MAMO;AACHG,YAAAA,OAAO,CAACC,KAAR,CAAc,UAAd,EAA0BX,GAA1B;AACH;AACJ;;AAEDY,QAAAA,KAAK,GAAG;AACJ,eAAKvB,QAAL,CAAcuB,KAAd;AACH;;AAvDyB,O;;AAATxB,MAAAA,Q,CACVI,Q","sourcesContent":["interface IItem {\n    event: string,\n    cb: Function,\n    ctx: unknown\n}\n\nexport default class EventMgr {\n    static instance: any\n    public static getInstance(): any {\n        if (this.instance == null) {\n            this.instance = new EventMgr()\n        }\n        return this.instance\n    }\n\n    private eventMap: Map<string, IItem> = new Map()\n\n    on(event, cb, ctx?) {\n        if (!this.eventMap.has(event)) {\n            this.eventMap.set(event, {\n                event, cb, ctx\n            })\n        }\n\n        return () => {\n\n        }\n    }\n\n    off(evt: string) {\n        if (this.eventMap.has(evt)) {\n            const item = this.eventMap.get(evt)\n            if (item) {\n                this.eventMap.delete(evt)\n            }\n        }\n    }\n\n    once(event, cb, ctx?) {\n        let unsub = undefined\n        unsub = this.on(event, (...param) => {\n            cb.apply(ctx, param)\n            unsub()\n        }, ctx)\n        return unsub\n    }\n\n    emit(evt: string, ...param) {\n        if (this.eventMap.has(evt)) {\n            const item = this.eventMap.get(evt)\n            const { event, cb, ctx } = item\n            if (evt && cb) {\n                cb.apply(ctx, param)\n            }\n        } else {\n            console.error('没有注册该事件:', evt)\n        }\n    }\n\n    clear() {\n        this.eventMap.clear()\n    }\n}"]}