{"version":3,"sources":["file:///Users/super_javan/cocoscreator/PlayCard/assets/Script/View/UIGameView.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Vec3","Tween","tween","clickLock","EventMgr","ECardDir","EventGame_Enum","GameDB","PLAY_AREA_COUNT","UIPoker","moveWorld2Space","ccclass","property","PADDING_PLAY","UIGameView","onLoad","getInstance","on","EVENT_PLAYAREA_TO_RECEIVE","clickCardHandler","EVENT_PLAYAREA_TO_RECEIVE_UPDATE_VIEW","playPokerToReceive","EVENT_PLAYAREA_TO_PLAY_UPDATE_VIEW","playPokerToPlay","EVENT_PLAYAREA_TO_OTHERPLAY_UPDATE_VIEW","playPokerToOtherPlay","EVENT_OPEN_TOPPOKER_UPDATE_VIEW","openTopPoker","EVENT_CLOSEAREA_TO_OPEN_UPDATE_VIEW","closeToOpen","EVENT_OPEN_TO_RECEIVE_UPDATE_VIEW","openToReceive","EVENT_OPEN_TO_PLAY_UPDATE_VIEW","openToPlay","EVENT_OPEN_TO_CLOSE_UPDATE_VIEW","openToClose","createAllCardByDB","pokers","index","poker","uiPoker","createUIPoker","initArea","addChild","node","setPosition","cardPrefab","getComponent","init","gamePlay","stuck","children","length","removeChild","push","card","closeSendArea","initPlayGroup","groupIndex","cardIndex","i","playGruopRoot","setSiblingIndex","delay","nodeEndPos","to","position","scale","call","dir","OPEN","refreshView","start","console","log","onCheckInPlayArea","onCheckIndexTop","isOpen","emit","EVENT_PLAYAREA_TO_RECEIVE_PLAY_UPDATE_DB","EVENT_PLAYAREA_TO_PLAY_UPDATE_DB","onCheckInCloseArea","onCheckIndexByCloseTop","EVENT_CLOSEAREA_TO_OPEN_UPDATE_DB","onCheckInOpenArea","onCheckIndexByOpenTop","EVENT_OPEN_TO_UPDATE_DB","moveUIPokerToReceiveArea","receiveIndex","parent","targetNode","receiveAreaList","moveUIPokerToPlayArea","pokerIndex","indexInGroup","openPoker","openSendArea","padding","p","openGroup","getPoker","checkCloseIsEmpty","isCloseEmptyOpenToClose","stopAllByTag","restartGame","removeAllChildren","area","EVENT_RESTART_GAME"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Game, instantiate, Vec3, UITransform, Tween, tween } from 'cc';\nimport { clickLock } from '../Base/Docretors';\nimport EventMgr from '../Base/Event/EventMgr';\nimport { ECardDir, EventGame_Enum } from '../Enum';\nimport GameEngine from '../GameEngine';\nimport GameDB, { PLAY_AREA_COUNT } from '../Model/GameDB';\nimport Poker from '../Model/Poker';\nimport { UIPoker } from '../UI/UIPoker';\nimport TweenUtil, { moveWorld2Space } from '../Utils/Utils';\nconst { ccclass, property } = _decorator;\n\n\nconst PADDING_PLAY = 92\n@ccclass('UIGameView')\nexport class UIGameView extends Component {\n    @property(Prefab)\n    cardPrefab: Prefab = null\n\n    @property(Node)\n    closeSendArea: Node = null\n    @property(Node)\n    openSendArea: Node = null\n    @property([Node])\n    receiveAreaList: Node[] = []\n    @property(Node)\n    playGruopRoot: Node = null\n    @property(Node)\n    initArea: Node = null\n\n    onLoad() {\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_PLAYAREA_TO_RECEIVE, this.clickCardHandler, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_PLAYAREA_TO_RECEIVE_UPDATE_VIEW, this.playPokerToReceive, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_PLAYAREA_TO_PLAY_UPDATE_VIEW, this.playPokerToPlay, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_PLAYAREA_TO_OTHERPLAY_UPDATE_VIEW, this.playPokerToOtherPlay, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_OPEN_TOPPOKER_UPDATE_VIEW, this.openTopPoker, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_CLOSEAREA_TO_OPEN_UPDATE_VIEW, this.closeToOpen, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_OPEN_TO_RECEIVE_UPDATE_VIEW, this.openToReceive, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_OPEN_TO_PLAY_UPDATE_VIEW, this.openToPlay, this)\n        EventMgr.getInstance().on(EventGame_Enum.EVENT_OPEN_TO_CLOSE_UPDATE_VIEW, this.openToClose, this)\n    }\n\n    createAllCardByDB(pokers: Poker[]) {\n        //先创建所有牌到init待发牌区\n        let index = 0\n        for (const poker of pokers) {\n            let uiPoker = this.createUIPoker(poker)\n            this.initArea.addChild(uiPoker.node)\n            uiPoker.node.setPosition(0.5 * index, 0.2 * index, 0)\n            index++\n        }\n    }\n\n    createUIPoker(poker: Poker): UIPoker {\n        const cardPrefab = instantiate(this.cardPrefab)\n        const uiPoker = cardPrefab.getComponent(UIPoker)\n        uiPoker.init(poker)\n        return uiPoker\n    }\n\n    //将牌移到close 收牌区\n    gamePlay() {\n        let stuck = []\n        for (let index = this.initArea.children.length - 1; index >= 0; --index) {\n            let children = this.initArea.children[index]\n\n            this.initArea.removeChild(children)\n            stuck.push(children)\n        }\n\n        for (let index = stuck.length - 1; index >= 0; --index) {\n            const card = stuck[index];\n            this.closeSendArea.addChild(card)\n        }\n    }\n\n    async initPlayGroup(groupIndex: number, cardIndex: number, poker: Poker, i: number) {\n        let index = PLAY_AREA_COUNT * cardIndex - cardIndex * (cardIndex - 1) / 2 - cardIndex + groupIndex\n        // console.log('groupIndex:' + groupIndex + ',cardIndex:' + cardIndex + ',index:' + index)\n        let node = poker.UIPoker.node\n        // console.log('poker 点数:', poker.count, ',花色:', poker.suit)\n        // console.log('poker worldPos', node.getComponent(UITransform).convertToWorldSpaceAR(new Vec3(0, 0, 0)))\n        moveWorld2Space(node, this.playGruopRoot)\n        node.setSiblingIndex(index)\n\n        let delay = index * 0.1\n        let nodeEndPos = groupIndex * PADDING_PLAY\n\n        if (i == 0) {\n            tween(node)\n                .delay(delay)\n                .to(0.3, { position: new Vec3(nodeEndPos, cardIndex * -75, 0) })\n                .to(0.3, { scale: new Vec3(0, 1, 0) })\n                .call(() => {\n                    poker.dir = ECardDir.OPEN\n                    poker.UIPoker.refreshView()\n                })\n                .to(0.3, { scale: new Vec3(1, 1, 1) })\n                .start()\n        } else {\n            tween(node)\n                .delay(delay)\n                .to(0.3, { position: new Vec3(nodeEndPos, cardIndex * -75, 0) })\n                .start()\n        }\n\n        // if (this.closeSendArea.children.length <= 24) {\n        //     for (let index = 0; index < this.closeSendArea.children.length; index++) {\n        //         let children = this.closeSendArea.children[index]\n        //         console.log(children.getComponent(UIPoker).poker.count + ',' + children.getComponent(UIPoker).poker.suit)\n        //     }\n        // }\n    }\n\n    clickCardHandler(poker: Poker) {\n        console.log('点击poker', poker)\n        let uiPoker = poker.UIPoker\n\n        if (GameDB.getInstance().onCheckInPlayArea(poker)) {\n            // console.log('点击的区域是PlayArea')\n            if (GameDB.getInstance().onCheckIndexTop(poker)) {\n                if (uiPoker.isOpen()) {\n                    EventMgr.getInstance().emit(EventGame_Enum.EVENT_PLAYAREA_TO_RECEIVE_PLAY_UPDATE_DB, uiPoker.poker)\n                }\n            } else {\n                if (uiPoker.isOpen()) {\n                    EventMgr.getInstance().emit(EventGame_Enum.EVENT_PLAYAREA_TO_PLAY_UPDATE_DB, uiPoker.poker)\n                }\n            }\n        } else if (GameDB.getInstance().onCheckInCloseArea(poker)) {\n            // console.log('点击的区域是CloseArea')\n            if (GameDB.getInstance().onCheckIndexByCloseTop(poker)) {\n                EventMgr.getInstance().emit(EventGame_Enum.EVENT_CLOSEAREA_TO_OPEN_UPDATE_DB, uiPoker.poker)\n            }\n        } else if (GameDB.getInstance().onCheckInOpenArea(poker)) {\n            // console.log('点击的区域是openArea')\n            if (GameDB.getInstance().onCheckIndexByOpenTop(poker)) {\n                EventMgr.getInstance().emit(EventGame_Enum.EVENT_OPEN_TO_UPDATE_DB, uiPoker.poker)\n            }\n        }\n    }\n\n    playPokerToReceive(poker: Poker) {\n        this.moveUIPokerToReceiveArea(poker)\n    }\n\n    openToReceive(poker: Poker) {\n        this.moveUIPokerToReceiveArea(poker)\n    }\n\n    moveUIPokerToReceiveArea(poker: Poker) {\n        let receiveIndex: number = poker.parent.index\n        console.log('receiveIndex:', receiveIndex)\n        let node = poker.UIPoker.node\n        // console.log('poker worldPos', node.getComponent(UITransform).convertToWorldSpaceAR(new Vec3(0, 0, 0)))\n        let targetNode = this.receiveAreaList[receiveIndex]\n        moveWorld2Space(node, targetNode)\n\n        let delay = 0.5\n        tween(node)\n            .to(delay, { position: new Vec3(0, 0, 0) })\n            .start()\n    }\n\n    moveUIPokerToPlayArea(poker: Poker) {\n        let node = poker.UIPoker.node\n        let groupIndex = poker.parent.index\n        let pokerIndex = poker.indexInGroup()\n        moveWorld2Space(node, this.playGruopRoot)\n        this.playGruopRoot.addChild(node)\n\n        let nodeEndPos = groupIndex * PADDING_PLAY\n        tween(node)\n            .to(0.5, { position: new Vec3(nodeEndPos, -75 * pokerIndex, 0) })\n            .start()\n    }\n\n    openToPlay(poker: Poker) {\n        this.moveUIPokerToPlayArea(poker)\n    }\n\n    playPokerToPlay(poker: Poker) {\n        this.moveUIPokerToPlayArea(poker)\n    }\n\n    playPokerToOtherPlay(pokers: Poker[], openPoker: Poker) {\n        for (let index = pokers.length - 1; index >= 0; index--) {\n            let poker = pokers[index];\n            this.moveUIPokerToPlayArea(poker)\n        }\n\n        openPoker.dir = ECardDir.OPEN\n        openPoker.UIPoker.refreshView()\n    }\n\n    openTopPoker(poker: Poker) {\n        let node = poker.UIPoker.node\n        tween(node)\n            .to(0.3, { scale: new Vec3(0, 0, 0) })\n            .call(() => {\n                poker.dir = ECardDir.OPEN\n                poker.UIPoker.refreshView()\n            })\n            .to(0.3, { scale: new Vec3(1, 1, 1) })\n            .start()\n    }\n\n    closeToOpen(poker: Poker) {\n        let node = poker.UIPoker.node\n        moveWorld2Space(node, this.openSendArea)\n\n        let delay = 0.5\n        tween(node)\n            .to(delay, { position: new Vec3(0, 0, 0) })\n            .to(0.3, { scale: new Vec3(0, 1, 1) })\n            .call(() => {\n                poker.dir = ECardDir.OPEN\n                poker.UIPoker.refreshView()\n            })\n            .to(0.3, { scale: new Vec3(1, 1, 1) })\n            .start()\n\n        let padding = -50\n        for (let index = 0; index <= 1; index++) {\n            let p: Poker = GameDB.getInstance().openGroup.getPoker(-2 - index)\n            if (p) {\n                tween(p.UIPoker.node)\n                    .to(0.2, { position: new Vec3(padding * (index + 1), 0, 0) })\n                    .start()\n            }\n        }\n    }\n\n    checkCloseIsEmpty() {\n        GameDB.getInstance().isCloseEmptyOpenToClose()\n    }\n    @clickLock(0.5)\n    openToClose(pokers) {\n        let index = 0\n        for (const poker of pokers) {\n            let node = poker.UIPoker.node\n            Tween.stopAllByTag(node)\n            moveWorld2Space(node, this.closeSendArea)\n            node.setPosition(0.5 * index, 0.2 * index, 0)\n            index++\n        }\n    }\n\n    restartGame() {\n        this.closeSendArea.removeAllChildren()\n        this.openSendArea.removeAllChildren()\n\n        for (let index = 0; index < this.receiveAreaList.length; index++) {\n            const area = this.receiveAreaList[index];\n            area.removeAllChildren()\n        }\n\n        this.playGruopRoot.removeAllChildren()\n        this.initArea.removeAllChildren()\n\n        EventMgr.getInstance().emit(EventGame_Enum.EVENT_RESTART_GAME)\n    }\n}\n\n"]}